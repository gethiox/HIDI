package input

import (
	"testing"

	"github.com/gethiox/go-evdev"
	"github.com/stretchr/testify/assert"
)

func findDevice(devices []Device, target Device) (Device, bool) {
	var deviceToCompare Device
	var found bool
	for _, nd := range devices {
		if target.ID == nd.ID {
			deviceToCompare = nd
			found = true
			break
		}
	}
	return deviceToCompare, found
}

func TestNormalize_Snapshot1(t *testing.T) {

	devInfos := []DeviceInfo{
		// HyperX HX-KB1BR1-NA Keyboard
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0951,
				Product: 0x16b7,
				Version: 0x0111,
			},
			Name:     "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard",
			Phys:     "usb-20980000.usb-1.1/input0",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.0/0003:0951:16B7.0001/input/input0",
			Uniq:     "",
			Handlers: []string{"sysrq", "kbd", "leds", "event0"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x120013},
				KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{0x1f},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0951,
				Product: 0x16b7,
				Version: 0x0111,
			},
			Name:     "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard Mouse",
			Phys:     "usb-20980000.usb-1.1/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:0951:16B7.0002/input/input1",
			Uniq:     "",
			Handlers: []string{"mouse0", "event1"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x17},
				KEY:  [24]uint32{0x1f0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{0x1943},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0951,
				Product: 0x16b7,
				Version: 0x0111,
			},
			Name:     "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard System Control",
			Phys:     "usb-20980000.usb-1.1/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:0951:16B7.0002/input/input2",
			Uniq:     "",
			Handlers: []string{"kbd", "event2"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x13},
				KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0951,
				Product: 0x16b7,
				Version: 0x0111,
			},
			Name:     "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard Consumer Control",
			Phys:     "usb-20980000.usb-1.1/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:0951:16B7.0002/input/input3",
			Uniq:     "",
			Handlers: []string{"kbd", "event3"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x1f},
				KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130ff3, 0x8b17c000, 0x677bfa, 0xd9415fed, 0x19ed680, 0x4400, 0x0, 0x10000002},
				REL:  [1]uint32{0x1040},
				ABS:  [2]uint32{0x1, 0x0},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0951,
				Product: 0x16b7,
				Version: 0x0111,
			},
			Name:     "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard",
			Phys:     "usb-20980000.usb-1.1/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:0951:16B7.0002/input/input5",
			Uniq:     "",
			Handlers: []string{"sysrq", "kbd", "event4"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x100013},
				KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		// Razer Razer Ornata Chroma Keyboard
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x1532,
				Product: 0x021e,
				Version: 0x0111,
			},
			Name:     "Razer Razer Ornata Chroma",
			Phys:     "usb-20980000.usb-1.2/input0",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.0/0003:1532:021E.0004/input/input6",
			Uniq:     "",
			Handlers: []string{"sysrq", "kbd", "leds", "event5"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x120013},
				KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{0x7},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x1532,
				Product: 0x021e,
				Version: 0x0111,
			},
			Name:     "Razer Razer Ornata Chroma Keyboard",
			Phys:     "usb-20980000.usb-1.2/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.1/0003:1532:021E.0005/input/input7",
			Uniq:     "",
			Handlers: []string{"sysrq", "kbd", "event6"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x100013},
				KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x1532,
				Product: 0x021e,
				Version: 0x0111,
			},
			Name:     "Razer Razer Ornata Chroma Consumer Control",
			Phys:     "usb-20980000.usb-1.2/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.1/0003:1532:021E.0005/input/input8",
			Uniq:     "",
			Handlers: []string{"kbd", "event7"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x1f},
				KEY:  [24]uint32{0x300ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130c73, 0xb17c000, 0x267bfa, 0xd9415fed, 0x9e1680, 0x4400, 0x0, 0x10000002},
				REL:  [1]uint32{0x1040},
				ABS:  [2]uint32{0x1, 0x0},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x1532,
				Product: 0x021e,
				Version: 0x0111,
			},
			Name:     "Razer Razer Ornata Chroma System Control",
			Phys:     "usb-20980000.usb-1.2/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.1/0003:1532:021E.0005/input/input9",
			Uniq:     "",
			Handlers: []string{"kbd", "event8"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x13},
				KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x1532,
				Product: 0x021e,
				Version: 0x0111,
			},
			Name:     "Razer Razer Ornata Chroma",
			Phys:     "usb-20980000.usb-1.2/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.1/0003:1532:021E.0005/input/input10",
			Uniq:     "",
			Handlers: []string{"event9"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x9},
				KEY:  [24]uint32{},
				REL:  [1]uint32{},
				ABS:  [2]uint32{0x100, 0x0},
				MSC:  [1]uint32{},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x1532,
				Product: 0x021e,
				Version: 0x0111,
			},
			Name:     "Razer Razer Ornata Chroma",
			Phys:     "usb-20980000.usb-1.2/input2",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.2/0003:1532:021E.0006/input/input11",
			Uniq:     "",
			Handlers: []string{"mouse1", "event10"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x17},
				KEY:  [24]uint32{0x1f0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{0x903},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		// Havit HV-KB390L Keyboard
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x04d9,
				Product: 0xa131,
				Version: 0x0111,
			},
			Name:     "HOLTEK USB-HID Keyboard",
			Phys:     "usb-20980000.usb-1.4/input0",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.0/0003:04D9:A131.0007/input/input12",
			Uniq:     "",
			Handlers: []string{"sysrq", "kbd", "leds", "event11"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x120013},
				KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{0x7},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x04d9,
				Product: 0xa131,
				Version: 0x0111,
			},
			Name:     "HOLTEK USB-HID Keyboard Mouse",
			Phys:     "usb-20980000.usb-1.4/input2",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.2/0003:04D9:A131.0009/input/input13",
			Uniq:     "",
			Handlers: []string{"mouse2", "event12"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x17},
				KEY:  [24]uint32{0x1f0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{0x1943},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x04d9,
				Product: 0xa131,
				Version: 0x0111,
			},
			Name:     "HOLTEK USB-HID Keyboard System Control",
			Phys:     "usb-20980000.usb-1.4/input2",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.2/0003:04D9:A131.0009/input/input14",
			Uniq:     "",
			Handlers: []string{"kbd", "event13"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x13},
				KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x04d9,
				Product: 0xa131,
				Version: 0x0111,
			},
			Name:     "HOLTEK USB-HID Keyboard Consumer Control",
			Phys:     "usb-20980000.usb-1.4/input2",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.2/0003:04D9:A131.0009/input/input15",
			Uniq:     "",
			Handlers: []string{"kbd", "event14"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x1f},
				KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130ff3, 0x8b17c000, 0x677bfa, 0xd9415fed, 0x19ed680, 0x4400, 0x0, 0x10000002},
				REL:  [1]uint32{0x1040},
				ABS:  [2]uint32{0x1, 0x0},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x04d9,
				Product: 0xa131,
				Version: 0x0111,
			},
			Name:     "HOLTEK USB-HID Keyboard",
			Phys:     "usb-20980000.usb-1.4/input2",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.2/0003:04D9:A131.0009/input/input16",
			Uniq:     "",
			Handlers: []string{"event15"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x9},
				KEY:  [24]uint32{},
				REL:  [1]uint32{},
				ABS:  [2]uint32{0x100, 0x0},
				MSC:  [1]uint32{},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x04d9,
				Product: 0xa131,
				Version: 0x0111,
			},
			Name:     "HOLTEK USB-HID Keyboard",
			Phys:     "usb-20980000.usb-1.4/input2",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.2/0003:04D9:A131.0009/input/input17",
			Uniq:     "",
			Handlers: []string{"sysrq", "kbd", "event16"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x100013},
				KEY:  [24]uint32{0x10000, 0x7, 0xff980000, 0x7ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		// SPC Gear GK550 Keyboard
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0c45,
				Product: 0x8508,
				Version: 0x0111,
			},
			Name:     "SONiX USB DEVICE",
			Phys:     "usb-20980000.usb-1.3/input0",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.0/0003:0C45:8508.000B/input/input18",
			Uniq:     "",
			Handlers: []string{"sysrq", "kbd", "leds", "event17"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x120013},
				KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{0x1f},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0c45,
				Product: 0x8508,
				Version: 0x0111,
			},
			Name:     "SONiX USB DEVICE Keyboard",
			Phys:     "usb-20980000.usb-1.3/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.1/0003:0C45:8508.000C/input/input19",
			Uniq:     "",
			Handlers: []string{"kbd", "event18"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x100013},
				KEY:  [24]uint32{0xff800000, 0x0, 0x80b0ffcd, 0x1cfffff, 0xfebffbff, 0xdffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0c45,
				Product: 0x8508,
				Version: 0x0111,
			},
			Name:     "SONiX USB DEVICE System Control",
			Phys:     "usb-20980000.usb-1.3/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.1/0003:0C45:8508.000C/input/input20",
			Uniq:     "",
			Handlers: []string{"kbd", "event19"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x13},
				KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0c45,
				Product: 0x8508,
				Version: 0x0111,
			},
			Name:     "SONiX USB DEVICE Consumer Control",
			Phys:     "usb-20980000.usb-1.3/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.1/0003:0C45:8508.000C/input/input21",
			Uniq:     "",
			Handlers: []string{"kbd", "event20"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x1f},
				KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130ff3, 0x8b17c000, 0x677bfa, 0xd9415fed, 0x19ed680, 0x4400, 0x0, 0x10000002},
				REL:  [1]uint32{0x1040},
				ABS:  [2]uint32{0x1, 0x0},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0c45,
				Product: 0x8508,
				Version: 0x0111,
			},
			Name:     "SONiX USB DEVICE",
			Phys:     "usb-20980000.usb-1.3/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.1/0003:0C45:8508.000C/input/input22",
			Uniq:     "",
			Handlers: []string{"event21"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x9},
				KEY:  [24]uint32{},
				REL:  [1]uint32{},
				ABS:  [2]uint32{0x100, 0x0},
				MSC:  [1]uint32{},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
	}

	expected := []Device{
		// HyperX HX-KB1BR1-NA Keyboard
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0951,
				Product: 0x16b7,
				Version: 0x0111,
			},
			Name:       "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard",
			Uniq:       "",
			Phys:       "usb-20980000.usb-1.1",
			DeviceType: KeyboardDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_STD_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x0951,
						Product: 0x16b7,
						Version: 0x0111,
					},
					Name:     "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard",
					Phys:     "usb-20980000.usb-1.1/input0",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.0/0003:0951:16B7.0001/input/input0",
					Uniq:     "",
					Handlers: []string{"sysrq", "kbd", "leds", "event0"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x120013},
						KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{0x1f},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MOUSE: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x0951,
						Product: 0x16b7,
						Version: 0x0111,
					},
					Name:     "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard Mouse",
					Phys:     "usb-20980000.usb-1.1/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:0951:16B7.0002/input/input1",
					Uniq:     "",
					Handlers: []string{"mouse0", "event1"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x17},
						KEY:  [24]uint32{0x1f0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{0x1943},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_SYSTEM: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x0951,
						Product: 0x16b7,
						Version: 0x0111,
					},
					Name:     "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard System Control",
					Phys:     "usb-20980000.usb-1.1/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:0951:16B7.0002/input/input2",
					Uniq:     "",
					Handlers: []string{"kbd", "event2"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x13},
						KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MULTIMEDIA: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x0951,
						Product: 0x16b7,
						Version: 0x0111,
					},
					Name:     "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard Consumer Control",
					Phys:     "usb-20980000.usb-1.1/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:0951:16B7.0002/input/input3",
					Uniq:     "",
					Handlers: []string{"kbd", "event3"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x1f},
						KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130ff3, 0x8b17c000, 0x677bfa, 0xd9415fed, 0x19ed680, 0x4400, 0x0, 0x10000002},
						REL:  [1]uint32{0x1040},
						ABS:  [2]uint32{0x1, 0x0},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_NKRO_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x0951,
						Product: 0x16b7,
						Version: 0x0111,
					},
					Name:     "Kingston HyperX Alloy FPS Mechanical Gaming Keyboard",
					Phys:     "usb-20980000.usb-1.1/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:0951:16B7.0002/input/input5",
					Uniq:     "",
					Handlers: []string{"sysrq", "kbd", "event4"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x100013},
						KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
		// Razer Razer Ornata Chroma Keyboard
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x1532,
				Product: 0x021e,
				Version: 0x0111,
			},
			Name:       "Razer Razer Ornata Chroma",
			Uniq:       "",
			Phys:       "usb-20980000.usb-1.2",
			DeviceType: KeyboardDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_STD_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x1532,
						Product: 0x021e,
						Version: 0x0111,
					},
					Name:     "Razer Razer Ornata Chroma",
					Phys:     "usb-20980000.usb-1.2/input0",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.0/0003:1532:021E.0004/input/input6",
					Uniq:     "",
					Handlers: []string{"sysrq", "kbd", "leds", "event5"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x120013},
						KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{0x7},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_NKRO_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x1532,
						Product: 0x021e,
						Version: 0x0111,
					},
					Name:     "Razer Razer Ornata Chroma Keyboard",
					Phys:     "usb-20980000.usb-1.2/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.1/0003:1532:021E.0005/input/input7",
					Uniq:     "",
					Handlers: []string{"sysrq", "kbd", "event6"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x100013},
						KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MULTIMEDIA: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x1532,
						Product: 0x021e,
						Version: 0x0111,
					},
					Name:     "Razer Razer Ornata Chroma Consumer Control",
					Phys:     "usb-20980000.usb-1.2/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.1/0003:1532:021E.0005/input/input8",
					Uniq:     "",
					Handlers: []string{"kbd", "event7"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x1f},
						KEY:  [24]uint32{0x300ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130c73, 0xb17c000, 0x267bfa, 0xd9415fed, 0x9e1680, 0x4400, 0x0, 0x10000002},
						REL:  [1]uint32{0x1040},
						ABS:  [2]uint32{0x1, 0x0},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_SYSTEM: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x1532,
						Product: 0x021e,
						Version: 0x0111,
					},
					Name:     "Razer Razer Ornata Chroma System Control",
					Phys:     "usb-20980000.usb-1.2/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.1/0003:1532:021E.0005/input/input9",
					Uniq:     "",
					Handlers: []string{"kbd", "event8"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x13},
						KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_UNKNOWN: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x1532,
						Product: 0x021e,
						Version: 0x0111,
					},
					Name:     "Razer Razer Ornata Chroma",
					Phys:     "usb-20980000.usb-1.2/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.1/0003:1532:021E.0005/input/input10",
					Uniq:     "",
					Handlers: []string{"event9"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x9},
						KEY:  [24]uint32{},
						REL:  [1]uint32{},
						ABS:  [2]uint32{0x100, 0x0},
						MSC:  [1]uint32{},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MOUSE: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x1532,
						Product: 0x021e,
						Version: 0x0111,
					},
					Name:     "Razer Razer Ornata Chroma",
					Phys:     "usb-20980000.usb-1.2/input2",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.2/0003:1532:021E.0006/input/input11",
					Uniq:     "",
					Handlers: []string{"mouse1", "event10"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x17},
						KEY:  [24]uint32{0x1f0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{0x903},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
		// Havit HV-KB390L Keyboard
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x04d9,
				Product: 0xa131,
				Version: 0x0111,
			},
			Name:       "HOLTEK USB-HID Keyboard",
			Uniq:       "",
			Phys:       "usb-20980000.usb-1.4",
			DeviceType: KeyboardDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_STD_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x04d9,
						Product: 0xa131,
						Version: 0x0111,
					},
					Name:     "HOLTEK USB-HID Keyboard",
					Phys:     "usb-20980000.usb-1.4/input0",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.0/0003:04D9:A131.0007/input/input12",
					Uniq:     "",
					Handlers: []string{"sysrq", "kbd", "leds", "event11"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x120013},
						KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{0x7},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MOUSE: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x04d9,
						Product: 0xa131,
						Version: 0x0111,
					},
					Name:     "HOLTEK USB-HID Keyboard Mouse",
					Phys:     "usb-20980000.usb-1.4/input2",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.2/0003:04D9:A131.0009/input/input13",
					Uniq:     "",
					Handlers: []string{"mouse2", "event12"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x17},
						KEY:  [24]uint32{0x1f0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{0x1943},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_SYSTEM: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x04d9,
						Product: 0xa131,
						Version: 0x0111,
					},
					Name:     "HOLTEK USB-HID Keyboard System Control",
					Phys:     "usb-20980000.usb-1.4/input2",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.2/0003:04D9:A131.0009/input/input14",
					Uniq:     "",
					Handlers: []string{"kbd", "event13"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x13},
						KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MULTIMEDIA: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x04d9,
						Product: 0xa131,
						Version: 0x0111,
					},
					Name:     "HOLTEK USB-HID Keyboard Consumer Control",
					Phys:     "usb-20980000.usb-1.4/input2",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.2/0003:04D9:A131.0009/input/input15",
					Uniq:     "",
					Handlers: []string{"kbd", "event14"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x1f},
						KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130ff3, 0x8b17c000, 0x677bfa, 0xd9415fed, 0x19ed680, 0x4400, 0x0, 0x10000002},
						REL:  [1]uint32{0x1040},
						ABS:  [2]uint32{0x1, 0x0},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_UNKNOWN: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x04d9,
						Product: 0xa131,
						Version: 0x0111,
					},
					Name:     "HOLTEK USB-HID Keyboard",
					Phys:     "usb-20980000.usb-1.4/input2",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.2/0003:04D9:A131.0009/input/input16",
					Uniq:     "",
					Handlers: []string{"event15"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x9},
						KEY:  [24]uint32{},
						REL:  [1]uint32{},
						ABS:  [2]uint32{0x100, 0x0},
						MSC:  [1]uint32{},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_NKRO_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x04d9,
						Product: 0xa131,
						Version: 0x0111,
					},
					Name:     "HOLTEK USB-HID Keyboard",
					Phys:     "usb-20980000.usb-1.4/input2",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.2/0003:04D9:A131.0009/input/input17",
					Uniq:     "",
					Handlers: []string{"sysrq", "kbd", "event16"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x100013},
						KEY:  [24]uint32{0x10000, 0x7, 0xff980000, 0x7ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
		// SPC Gear GK550 Keyboard
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x0c45,
				Product: 0x8508,
				Version: 0x0111,
			},
			Name:       "SONiX USB DEVICE",
			Uniq:       "",
			Phys:       "usb-20980000.usb-1.3",
			DeviceType: KeyboardDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_STD_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x0c45,
						Product: 0x8508,
						Version: 0x0111,
					},
					Name:     "SONiX USB DEVICE",
					Phys:     "usb-20980000.usb-1.3/input0",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.0/0003:0C45:8508.000B/input/input18",
					Uniq:     "",
					Handlers: []string{"sysrq", "kbd", "leds", "event17"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x120013},
						KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{0x1f},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_NKRO_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x0c45,
						Product: 0x8508,
						Version: 0x0111,
					},
					Name:     "SONiX USB DEVICE Keyboard",
					Phys:     "usb-20980000.usb-1.3/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.1/0003:0C45:8508.000C/input/input19",
					Uniq:     "",
					Handlers: []string{"kbd", "event18"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x100013},
						KEY:  [24]uint32{0xff800000, 0x0, 0x80b0ffcd, 0x1cfffff, 0xfebffbff, 0xdffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_SYSTEM: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x0c45,
						Product: 0x8508,
						Version: 0x0111,
					},
					Name:     "SONiX USB DEVICE System Control",
					Phys:     "usb-20980000.usb-1.3/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.1/0003:0C45:8508.000C/input/input20",
					Uniq:     "",
					Handlers: []string{"kbd", "event19"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x13},
						KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MULTIMEDIA: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x0c45,
						Product: 0x8508,
						Version: 0x0111,
					},
					Name:     "SONiX USB DEVICE Consumer Control",
					Phys:     "usb-20980000.usb-1.3/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.1/0003:0C45:8508.000C/input/input21",
					Uniq:     "",
					Handlers: []string{"kbd", "event20"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x1f},
						KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130ff3, 0x8b17c000, 0x677bfa, 0xd9415fed, 0x19ed680, 0x4400, 0x0, 0x10000002},
						REL:  [1]uint32{0x1040},
						ABS:  [2]uint32{0x1, 0x0},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_UNKNOWN: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x0c45,
						Product: 0x8508,
						Version: 0x0111,
					},
					Name:     "SONiX USB DEVICE",
					Phys:     "usb-20980000.usb-1.3/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.1/0003:0C45:8508.000C/input/input22",
					Uniq:     "",
					Handlers: []string{"event21"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x9},
						KEY:  [24]uint32{},
						REL:  [1]uint32{},
						ABS:  [2]uint32{0x100, 0x0},
						MSC:  [1]uint32{},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
	}

	normalized := Normalize(devInfos)

	if !assert.Equal(t, len(expected), len(normalized), "unexpected amount of devices") {
		t.FailNow()
	}

	for i := 0; i < len(expected); i++ {
		expectedDev, actualDev := expected[i], normalized[i]

		t.Run(expectedDev.Name, func(t *testing.T) {
			assert.Equal(t, expectedDev, actualDev)
		})
	}
}

func TestNormalize_Snapshot2(t *testing.T) {

	devInfos := []DeviceInfo{
		// Chinese remote keyboard with touchpad
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x05ac,
				Product: 0x0256,
				Version: 0x0110,
			},
			Name:     "HID 05ac:0256",
			Phys:     "usb-20980000.usb-1.1/input0",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.0/0003:05AC:0256.0001/input/input0",
			Uniq:     "",
			Handlers: []string{"sysrq", "kbd", "leds", "event0"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x120013},
				KEY:  [24]uint32{0x10000, 0x7, 0xff800000, 0x7ff, 0xfebeffdf, 0xf3cfffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{0x7},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x05ac,
				Product: 0x0256,
				Version: 0x0110,
			},
			Name:     "HID 05ac:0256 Mouse",
			Phys:     "usb-20980000.usb-1.1/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:05AC:0256.0002/input/input1",
			Uniq:     "",
			Handlers: []string{"mouse0", "event1"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x17},
				KEY:  [24]uint32{0x1f0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{0x1943},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x05ac,
				Product: 0x0256,
				Version: 0x0110,
			},
			Name:     "HID 05ac:0256 Consumer Control",
			Phys:     "usb-20980000.usb-1.1/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:05AC:0256.0002/input/input2",
			Uniq:     "",
			Handlers: []string{"kbd", "event2"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x1f},
				KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130ff3, 0x8b17c000, 0x677bfa, 0xd9415fed, 0x19ed680, 0x4400, 0x0, 0x10000002},
				REL:  [1]uint32{0x1040},
				ABS:  [2]uint32{0x1, 0x0},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x05ac,
				Product: 0x0256,
				Version: 0x0110,
			},
			Name:     "HID 05ac:0256 System Control",
			Phys:     "usb-20980000.usb-1.1/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:05AC:0256.0002/input/input3",
			Uniq:     "",
			Handlers: []string{"kbd", "event3"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x13},
				KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		// Logitech MX Ergo
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x046d,
				Product: 0x406f,
				Version: 0x0111,
			},
			Name:     "Logitech MX Ergo",
			Phys:     "usb-20980000.usb-1.2/input2:1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.2/0003:046D:C52B.0005/0003:046D:406F.0006/input/input16",
			Uniq:     "406f-55-d6-15-c2",
			Handlers: []string{"sysrq", "kbd", "leds", "mouse1", "event4"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x12001f},
				KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0xffff0001, 0x130ff3, 0x8b17c007, 0xffff7bfa, 0xd941dfff, 0xffbeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{0x1943},
				ABS:  [2]uint32{0x1, 0x0},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{0x1f},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
	}

	expected := []Device{
		// Chinese remote keyboard with touchpad
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x05ac,
				Product: 0x0256,
				Version: 0x0110,
			},
			Name:       "HID 05ac:0256",
			Uniq:       "",
			Phys:       "usb-20980000.usb-1.1",
			DeviceType: KeyboardDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_STD_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x05ac,
						Product: 0x0256,
						Version: 0x0110,
					},
					Name:     "HID 05ac:0256",
					Phys:     "usb-20980000.usb-1.1/input0",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.0/0003:05AC:0256.0001/input/input0",
					Uniq:     "",
					Handlers: []string{"sysrq", "kbd", "leds", "event0"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x120013},
						KEY:  [24]uint32{0x10000, 0x7, 0xff800000, 0x7ff, 0xfebeffdf, 0xf3cfffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{0x7},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MOUSE: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x05ac,
						Product: 0x0256,
						Version: 0x0110,
					},
					Name:     "HID 05ac:0256 Mouse",
					Phys:     "usb-20980000.usb-1.1/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:05AC:0256.0002/input/input1",
					Uniq:     "",
					Handlers: []string{"mouse0", "event1"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x17},
						KEY:  [24]uint32{0x1f0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{0x1943},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MULTIMEDIA: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x05ac,
						Product: 0x0256,
						Version: 0x0110,
					},
					Name:     "HID 05ac:0256 Consumer Control",
					Phys:     "usb-20980000.usb-1.1/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:05AC:0256.0002/input/input2",
					Uniq:     "",
					Handlers: []string{"kbd", "event2"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x1f},
						KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130ff3, 0x8b17c000, 0x677bfa, 0xd9415fed, 0x19ed680, 0x4400, 0x0, 0x10000002},
						REL:  [1]uint32{0x1040},
						ABS:  [2]uint32{0x1, 0x0},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_SYSTEM: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x05ac,
						Product: 0x0256,
						Version: 0x0110,
					},
					Name:     "HID 05ac:0256 System Control",
					Phys:     "usb-20980000.usb-1.1/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.1/0003:05AC:0256.0002/input/input3",
					Uniq:     "",
					Handlers: []string{"kbd", "event3"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x13},
						KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
		// Logitech MX Ergo
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x046d,
				Product: 0x406f,
				Version: 0x0111,
			},
			Name:       "Logitech MX Ergo",
			Uniq:       "406f-55-d6-15-c2",
			Phys:       "usb-20980000.usb-1.2",
			DeviceType: MouseDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_MOUSE: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x046d,
						Product: 0x406f,
						Version: 0x0111,
					},
					Name:     "Logitech MX Ergo",
					Phys:     "usb-20980000.usb-1.2/input2:1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.2/0003:046D:C52B.0005/0003:046D:406F.0006/input/input16",
					Uniq:     "406f-55-d6-15-c2",
					Handlers: []string{"sysrq", "kbd", "leds", "mouse1", "event4"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x12001f},
						KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0xffff0001, 0x130ff3, 0x8b17c007, 0xffff7bfa, 0xd941dfff, 0xffbeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{0x1943},
						ABS:  [2]uint32{0x1, 0x0},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{0x1f},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
	}

	normalized := Normalize(devInfos)

	if !assert.Equal(t, len(expected), len(normalized), "unexpected amount of devices") {
		t.FailNow()
	}

	for i := 0; i < len(expected); i++ {
		expectedDev, actualDev := expected[i], normalized[i]

		t.Run(expectedDev.Name, func(t *testing.T) {
			assert.Equal(t, expectedDev, actualDev)
		})
	}
}

func TestNormalize_Snapshot3(t *testing.T) {

	devInfos := []DeviceInfo{
		// Microsoft X-Box One S pad
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x045e,
				Product: 0x02ea,
				Version: 0x0301,
			},
			Name:     "Microsoft X-Box One S pad",
			Phys:     "usb-20980000.usb-1.1/input0",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.0/input/input2",
			Uniq:     "",
			Handlers: []string{"event2", "js0"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x20000b},
				KEY:  [24]uint32{0x7cdb0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{0x3003f},
				MSC:  [1]uint32{},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{0x1, 0x7030000, 0x0, 0x0},
				SW:   [1]uint32{},
			},
		},
		// Steam Controller
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x28de,
				Product: 0x1102,
				Version: 0x0111,
			},
			Name:     "Valve Software Wired Controller",
			Phys:     "usb-20980000.usb-1.2/input0",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.0/0003:28DE:1102.0001/input/input3",
			Uniq:     "",
			Handlers: []string{"sysrq", "kbd", "leds", "event0"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x120013},
				KEY:  [24]uint32{0xe080ffdf, 0x1cfffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{0x1f},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x28de,
				Product: 0x1102,
				Version: 0x0111,
			},
			Name:     "Valve Software Wired Controller",
			Phys:     "usb-20980000.usb-1.2/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.1/0003:28DE:1102.0002/input/input4",
			Uniq:     "",
			Handlers: []string{"mouse0", "event1"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x17},
				KEY:  [24]uint32{0x1f0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{0x903},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x28de,
				Product: 0x1102,
				Version: 0x0111,
			},
			Name:     "Steam Controller",
			Phys:     "usb-20980000.usb-1.2/input2",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.2/0003:28DE:1102.0003/input/input5",
			Uniq:     "FC64120ECC",
			Handlers: []string{"event3", "js1"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0xb},
				KEY:  [24]uint32{0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30000, 0x7fdb0006, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{0x33001b},
				MSC:  [1]uint32{},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		// Play Station Dualshock 4
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x054c,
				Product: 0x09cc,
				Version: 0x8111,
			},
			Name:     "Sony Interactive Entertainment Wireless Controller Touchpad",
			Phys:     "usb-20980000.usb-1.3/input3",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.3/0003:054C:09CC.0005/input/input7",
			Uniq:     "a4:53:85:fd:7b:d1",
			Handlers: []string{"mouse1", "event4"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x5},
				EV:   [1]uint32{0xb},
				KEY:  [24]uint32{0x2420, 0x0, 0x10000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{0x2608000, 0x3},
				MSC:  [1]uint32{},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x054c,
				Product: 0x09cc,
				Version: 0x8111,
			},
			Name:     "Sony Interactive Entertainment Wireless Controller Motion Sensors",
			Phys:     "usb-20980000.usb-1.3/input3",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.3/0003:054C:09CC.0005/input/input8",
			Uniq:     "a4:53:85:fd:7b:d1",
			Handlers: []string{"event5"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x40},
				EV:   [1]uint32{0x19},
				KEY:  [24]uint32{},
				REL:  [1]uint32{},
				ABS:  [2]uint32{0x3f},
				MSC:  [1]uint32{0x20},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x054c,
				Product: 0x09cc,
				Version: 0x8111,
			},
			Name:     "Sony Interactive Entertainment Wireless Controller",
			Phys:     "usb-20980000.usb-1.3/input3",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.3/0003:054C:09CC.0005/input/input6",
			Uniq:     "a4:53:85:fd:7b:d1",
			Handlers: []string{"event6", "js2"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x20001b},
				KEY:  [24]uint32{0x7fdb0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{0x3003f},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{0x1, 0x7030000, 0x0, 0x0},
				SW:   [1]uint32{},
			},
		},
	}

	expected := []Device{
		// Microsoft X-Box One S pad
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x045e,
				Product: 0x02ea,
				Version: 0x0301,
			},
			Name:       "Microsoft X-Box One S pad",
			Uniq:       "",
			Phys:       "usb-20980000.usb-1.1",
			DeviceType: JoystickDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_JOYSTICK: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x045e,
						Product: 0x02ea,
						Version: 0x0301,
					},
					Name:     "Microsoft X-Box One S pad",
					Phys:     "usb-20980000.usb-1.1/input0",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.0/input/input2",
					Uniq:     "",
					Handlers: []string{"event2", "js0"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x20000b},
						KEY:  [24]uint32{0x7cdb0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{0x3003f},
						MSC:  [1]uint32{},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{0x1, 0x7030000, 0x0, 0x0},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
		// Steam Controller
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x28de,
				Product: 0x1102,
				Version: 0x0111,
			},
			Name:       "Steam Controller",
			Uniq:       "FC64120ECC",
			Phys:       "usb-20980000.usb-1.2",
			DeviceType: JoystickDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_STD_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x28de,
						Product: 0x1102,
						Version: 0x0111,
					},
					Name:     "Valve Software Wired Controller",
					Phys:     "usb-20980000.usb-1.2/input0",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.0/0003:28DE:1102.0001/input/input3",
					Uniq:     "",
					Handlers: []string{"sysrq", "kbd", "leds", "event0"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x120013},
						KEY:  [24]uint32{0xe080ffdf, 0x1cfffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{0x1f},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MOUSE: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x28de,
						Product: 0x1102,
						Version: 0x0111,
					},
					Name:     "Valve Software Wired Controller",
					Phys:     "usb-20980000.usb-1.2/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.1/0003:28DE:1102.0002/input/input4",
					Uniq:     "",
					Handlers: []string{"mouse0", "event1"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x17},
						KEY:  [24]uint32{0x1f0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{0x903},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_JOYSTICK: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x28de,
						Product: 0x1102,
						Version: 0x0111,
					},
					Name:     "Steam Controller",
					Phys:     "usb-20980000.usb-1.2/input2",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.2/0003:28DE:1102.0003/input/input5",
					Uniq:     "FC64120ECC",
					Handlers: []string{"event3", "js1"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0xb},
						KEY:  [24]uint32{0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30000, 0x7fdb0006, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{0x33001b},
						MSC:  [1]uint32{},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
		// Play Station Dualshock 4
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x054c,
				Product: 0x09cc,
				Version: 0x8111,
			},
			Name:       "Sony Interactive Entertainment Wireless Controller",
			Uniq:       "a4:53:85:fd:7b:d1",
			Phys:       "usb-20980000.usb-1.3",
			DeviceType: JoystickDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_MOUSE: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x054c,
						Product: 0x09cc,
						Version: 0x8111,
					},
					Name:     "Sony Interactive Entertainment Wireless Controller Touchpad",
					Phys:     "usb-20980000.usb-1.3/input3",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.3/0003:054C:09CC.0005/input/input7",
					Uniq:     "a4:53:85:fd:7b:d1",
					Handlers: []string{"mouse1", "event4"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x5},
						EV:   [1]uint32{0xb},
						KEY:  [24]uint32{0x2420, 0x0, 0x10000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{0x2608000, 0x3},
						MSC:  [1]uint32{},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_UNKNOWN: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x054c,
						Product: 0x09cc,
						Version: 0x8111,
					},
					Name:     "Sony Interactive Entertainment Wireless Controller Motion Sensors",
					Phys:     "usb-20980000.usb-1.3/input3",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.3/0003:054C:09CC.0005/input/input8",
					Uniq:     "a4:53:85:fd:7b:d1",
					Handlers: []string{"event5"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x40},
						EV:   [1]uint32{0x19},
						KEY:  [24]uint32{},
						REL:  [1]uint32{},
						ABS:  [2]uint32{0x3f},
						MSC:  [1]uint32{0x20},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_JOYSTICK: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x054c,
						Product: 0x09cc,
						Version: 0x8111,
					},
					Name:     "Sony Interactive Entertainment Wireless Controller",
					Phys:     "usb-20980000.usb-1.3/input3",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.3/0003:054C:09CC.0005/input/input6",
					Uniq:     "a4:53:85:fd:7b:d1",
					Handlers: []string{"event6", "js2"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x20001b},
						KEY:  [24]uint32{0x7fdb0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{0x3003f},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{0x1, 0x7030000, 0x0, 0x0},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
	}

	normalized := Normalize(devInfos)

	if !assert.Equal(t, len(expected), len(normalized), "unexpected amount of devices") {
		t.FailNow()
	}

	for i := 0; i < len(expected); i++ {
		expectedDev, actualDev := expected[i], normalized[i]

		t.Run(expectedDev.Name, func(t *testing.T) {
			assert.Equal(t, expectedDev, actualDev)
		})
	}
}

func TestNormalize_Snapshot4_SameDevice(t *testing.T) {
	devInfos := []DeviceInfo{
		// 1st Microsoft X-Box One S pad
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x045e,
				Product: 0x02ea,
				Version: 0x0301,
			},
			Name:     "Microsoft X-Box One S pad",
			Phys:     "usb-20980000.usb-1.1/input0",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.0/input/input6",
			Uniq:     "",
			Handlers: []string{"event0", "js0"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x20000b},
				KEY:  [24]uint32{0x7cdb0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{0x3003f},
				MSC:  [1]uint32{},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{0x1, 0x7030000, 0x0, 0x0},
				SW:   [1]uint32{},
			},
		},
		// 2nd Microsoft X-Box One S pad
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x045e,
				Product: 0x02ea,
				Version: 0x0301,
			},
			Name:     "Microsoft X-Box One S pad",
			Phys:     "usb-20980000.usb-1.3/input0",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.0/input/input7",
			Uniq:     "",
			Handlers: []string{"event1", "js1"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x20000b},
				KEY:  [24]uint32{0x7cdb0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{0x3003f},
				MSC:  [1]uint32{},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{0x1, 0x7030000, 0x0, 0x0},
				SW:   [1]uint32{},
			},
		},
	}

	expected := []Device{
		// 1st Microsoft X-Box One S pad
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x045e,
				Product: 0x02ea,
				Version: 0x0301,
			},
			Name:       "Microsoft X-Box One S pad",
			Uniq:       "",
			Phys:       "usb-20980000.usb-1.1",
			DeviceType: JoystickDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_JOYSTICK: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x045e,
						Product: 0x02ea,
						Version: 0x0301,
					},
					Name:     "Microsoft X-Box One S pad",
					Phys:     "usb-20980000.usb-1.1/input0",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.1/1-1.1:1.0/input/input6",
					Uniq:     "",
					Handlers: []string{"event0", "js0"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x20000b},
						KEY:  [24]uint32{0x7cdb0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{0x3003f},
						MSC:  [1]uint32{},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{0x1, 0x7030000, 0x0, 0x0},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
		// 2nd Microsoft X-Box One S pad
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x045e,
				Product: 0x02ea,
				Version: 0x0301,
			},
			Name:       "Microsoft X-Box One S pad",
			Uniq:       "",
			Phys:       "usb-20980000.usb-1.3",
			DeviceType: JoystickDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_JOYSTICK: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x045e,
						Product: 0x02ea,
						Version: 0x0301,
					},
					Name:     "Microsoft X-Box One S pad",
					Phys:     "usb-20980000.usb-1.3/input0",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.0/input/input7",
					Uniq:     "",
					Handlers: []string{"event1", "js1"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x20000b},
						KEY:  [24]uint32{0x7cdb0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{0x3003f},
						MSC:  [1]uint32{},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{0x1, 0x7030000, 0x0, 0x0},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
	}

	normalized := Normalize(devInfos)

	if !assert.Equal(t, len(expected), len(normalized), "unexpected amount of devices") {
		t.FailNow()
	}

	for i := 0; i < len(expected); i++ {
		expectedDev, actualDev := expected[i], normalized[i]

		t.Run(expectedDev.Name, func(t *testing.T) {
			assert.Equal(t, expectedDev, actualDev)
		})
	}
}

func TestNormalize_Snapshot5(t *testing.T) {
	devInfos := []DeviceInfo{
		// Ferguson SR300, multimedia remote controller with gyroscopic mouse control
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x2252,
				Product: 0x0120,
				Version: 0x0110,
			},
			Name:     "HBGIC Technology Co., Ltd. USB Keyboard Mouse",
			Phys:     "usb-20980000.usb-1.4/input0",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.0/0003:2252:0120.0004/input/input6",
			Uniq:     "",
			Handlers: []string{"sysrq", "kbd", "leds", "event5"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x120013},
				KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{0x7},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x2252,
				Product: 0x0120,
				Version: 0x0110,
			},
			Name:     "HBGIC Technology Co., Ltd. USB Keyboard Mouse",
			Phys:     "usb-20980000.usb-1.4/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.1/0003:2252:0120.0005/input/input7",
			Uniq:     "",
			Handlers: []string{"mouse1", "event6"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x17},
				KEY:  [24]uint32{0x70000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
				REL:  [1]uint32{0x903},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x2252,
				Product: 0x0120,
				Version: 0x0110,
			},
			Name:     "HBGIC Technology Co., Ltd. USB Keyboard Mouse Consumer Control",
			Phys:     "usb-20980000.usb-1.4/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.1/0003:2252:0120.0005/input/input8",
			Uniq:     "",
			Handlers: []string{"kbd", "event7"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x1f},
				KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130ff3, 0x8b17c000, 0x677bfa, 0xd9415fed, 0x19ed680, 0x4400, 0x0, 0x10000002},
				REL:  [1]uint32{0x1040},
				ABS:  [2]uint32{0x1, 0x0},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x2252,
				Product: 0x0120,
				Version: 0x0110,
			},
			Name:     "HBGIC Technology Co., Ltd. USB Keyboard Mouse System Control",
			Phys:     "usb-20980000.usb-1.4/input1",
			Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.1/0003:2252:0120.0005/input/input9",
			Uniq:     "",
			Handlers: []string{"kbd", "event8"},
			Bitmaps: Bitmaps{
				PROP: [1]uint32{0x0},
				EV:   [1]uint32{0x13},
				KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
				REL:  [1]uint32{},
				ABS:  [2]uint32{},
				MSC:  [1]uint32{0x10},
				LED:  [1]uint32{},
				SND:  [1]uint32{},
				FF:   [4]uint32{},
				SW:   [1]uint32{},
			},
		},
	}

	expected := []Device{
		// Ferguson SR300, multimedia remote controller with gyroscopic mouse control
		{
			ID: InputID{
				Bus:     0x0003,
				Vendor:  0x2252,
				Product: 0x0120,
				Version: 0x0110,
			},
			Name:       "HBGIC Technology Co., Ltd. USB Keyboard Mouse",
			Uniq:       "",
			Phys:       "usb-20980000.usb-1.4",
			DeviceType: KeyboardDevice,
			Handlers: map[HandlerType]DeviceInfo{
				DI_TYPE_STD_KBD: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x2252,
						Product: 0x0120,
						Version: 0x0110,
					},
					Name:     "HBGIC Technology Co., Ltd. USB Keyboard Mouse",
					Phys:     "usb-20980000.usb-1.4/input0",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.0/0003:2252:0120.0004/input/input6",
					Uniq:     "",
					Handlers: []string{"sysrq", "kbd", "leds", "event5"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x120013},
						KEY:  [24]uint32{0x10000, 0x7, 0xff9f207a, 0xc14057ff, 0xfebeffdf, 0xffefffff, 0xffffffff, 0xfffffffe},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{0x7},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MOUSE: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x2252,
						Product: 0x0120,
						Version: 0x0110,
					},
					Name:     "HBGIC Technology Co., Ltd. USB Keyboard Mouse",
					Phys:     "usb-20980000.usb-1.4/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.1/0003:2252:0120.0005/input/input7",
					Uniq:     "",
					Handlers: []string{"mouse1", "event6"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x17},
						KEY:  [24]uint32{0x70000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
						REL:  [1]uint32{0x903},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_MULTIMEDIA: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x2252,
						Product: 0x0120,
						Version: 0x0110,
					},
					Name:     "HBGIC Technology Co., Ltd. USB Keyboard Mouse Consumer Control",
					Phys:     "usb-20980000.usb-1.4/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.1/0003:2252:0120.0005/input/input8",
					Uniq:     "",
					Handlers: []string{"kbd", "event7"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x1f},
						KEY:  [24]uint32{0x3f, 0x301ff, 0x0, 0x0, 0x0, 0x0, 0x483ffff, 0x17aff32d, 0xbfd44446, 0x0, 0x0, 0x1, 0x130ff3, 0x8b17c000, 0x677bfa, 0xd9415fed, 0x19ed680, 0x4400, 0x0, 0x10000002},
						REL:  [1]uint32{0x1040},
						ABS:  [2]uint32{0x1, 0x0},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
				DI_TYPE_SYSTEM: {
					ID: InputID{
						Bus:     0x0003,
						Vendor:  0x2252,
						Product: 0x0120,
						Version: 0x0110,
					},
					Name:     "HBGIC Technology Co., Ltd. USB Keyboard Mouse System Control",
					Phys:     "usb-20980000.usb-1.4/input1",
					Sysfs:    "/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.1/0003:2252:0120.0005/input/input9",
					Uniq:     "",
					Handlers: []string{"kbd", "event8"},
					Bitmaps: Bitmaps{
						PROP: [1]uint32{0x0},
						EV:   [1]uint32{0x13},
						KEY:  [24]uint32{0xc000, 0x100000, 0x0, 0x0, 0x0},
						REL:  [1]uint32{},
						ABS:  [2]uint32{},
						MSC:  [1]uint32{0x10},
						LED:  [1]uint32{},
						SND:  [1]uint32{},
						FF:   [4]uint32{},
						SW:   [1]uint32{},
					},
				},
			},
			Evdevs: map[HandlerType]*evdev.InputDevice{},
		},
	}

	normalized := Normalize(devInfos)

	t.Run("Device number", func(t *testing.T) {
		assert.Equal(t, len(expected), len(normalized))
	})

	for i := 0; i < len(expected); i++ {
		expectedDev, actualDev := expected[i], normalized[i]

		t.Run(expectedDev.Name, func(t *testing.T) {
			assert.Equal(t, expectedDev, actualDev)
		})
	}
}
